{"ast":null,"code":"let jwtDecode = require(\"jwt-decode\");\n\nexport const updateAppSettings = token => {\n  localStorage.clear();\n\n  if (token) {\n    localStorage.setItem(\"displayName\", jwtDecode(token)[\"sub\"]);\n    localStorage.setItem(\"token\", token);\n  }\n};\nexport const isMember = () => {\n  const token = localStorage.getItem(\"token\");\n\n  if (token) {\n    const audience = jwtDecode(token)[\"aud\"];\n    return !audience.includes(\"SHOW_USERS\") && !audience.includes(\"ADD_BOOK\");\n  }\n};\nexport const constructHeader = contentType => {\n  const auth = \"Bearer \" + localStorage.getItem(\"token\") || \"\";\n  return contentType ? {\n    \"Content-type\": contentType,\n    Authorization: auth\n  } : {\n    Authorization: auth\n  };\n};","map":{"version":3,"sources":["/opt/demo/secure-js-api-jwt/src/util.js"],"names":["jwtDecode","require","updateAppSettings","token","localStorage","clear","setItem","isMember","getItem","audience","includes","constructHeader","contentType","auth","Authorization"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAC1CC,EAAAA,YAAY,CAACC,KAAb;;AACA,MAAIF,KAAJ,EAAW;AACTC,IAAAA,YAAY,CAACE,OAAb,CAAqB,aAArB,EAAoCN,SAAS,CAACG,KAAD,CAAT,CAAiB,KAAjB,CAApC;AACAC,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACD;AACF,CANM;AAQP,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAC5B,QAAMJ,KAAK,GAAGC,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIL,KAAJ,EAAW;AACT,UAAMM,QAAQ,GAAGT,SAAS,CAACG,KAAD,CAAT,CAAiB,KAAjB,CAAjB;AACA,WAAO,CAACM,QAAQ,CAACC,QAAT,CAAkB,YAAlB,CAAD,IAAoC,CAACD,QAAQ,CAACC,QAAT,CAAkB,UAAlB,CAA5C;AACD;AACF,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,WAAD,IAAiB;AAC9C,QAAMC,IAAI,GAAG,YAAYT,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAZ,IAA6C,EAA1D;AACA,SAAOI,WAAW,GACd;AAAE,oBAAgBA,WAAlB;AAA+BE,IAAAA,aAAa,EAAED;AAA9C,GADc,GAEd;AAAEC,IAAAA,aAAa,EAAED;AAAjB,GAFJ;AAGD,CALM","sourcesContent":["let jwtDecode = require(\"jwt-decode\");\n\nexport const updateAppSettings = (token) => {\n  localStorage.clear();\n  if (token) {\n    localStorage.setItem(\"displayName\", jwtDecode(token)[\"sub\"]);\n    localStorage.setItem(\"token\", token);\n  }\n};\n\nexport const isMember = () => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    const audience = jwtDecode(token)[\"aud\"];\n    return !audience.includes(\"SHOW_USERS\") && !audience.includes(\"ADD_BOOK\");\n  }\n};\n\nexport const constructHeader = (contentType) => {\n  const auth = \"Bearer \" + localStorage.getItem(\"token\") || \"\";\n  return contentType\n    ? { \"Content-type\": contentType, Authorization: auth }\n    : { Authorization: auth };\n};\n"]},"metadata":{},"sourceType":"module"}